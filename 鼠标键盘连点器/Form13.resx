<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>该项目为江西理工大学软件工程学院18级学生开发，
仅供学习使用，部分代码以及图片资源来源已注明出处。


《资源出处声明》：
	键盘钩子代码来源:
	【梦琪小生】
	【转】【C#】【全局键盘监听】
	https://www.cnblogs.com/mqxs/p/7181888.html
	http://www.bianceng.cn/Programming/csharp/201410/45484.htm

	Win32Api代码复制来源:
	【C#实现鼠标的全局监听】
	https://blog.csdn.net/hu421160052/article/details/99680147

	鼠标钩子
	代码出处：
	【C#实现鼠标的全局监听】
	https://blog.csdn.net/hu421160052/article/details/99680147

	鼠标滚轮监听：
	【C# 音量控制器 Volume Controler（全局快捷键）】
	https://www.bilibili.com/video/BV1i54y1k7Jc

	图片资源1.jpg出处：
	【百度：黑客 图片搜索】
	https://image.baidu.com/search/detail?ct=503316480&amp;z=0&amp;ipn=d&amp;word=%E9%BB%91%E5%AE%A2&amp;step_word=&amp;hs=0&amp;pn=2&amp;spn=0&amp;di=140800&amp;pi=0&amp;rn=1&amp;tn=baiduimagedetail&amp;is=0%2C0&amp;istype=0&amp;ie=utf-8&amp;oe=utf-8&amp;in=&amp;cl=2&amp;lm=-1&amp;st=undefined&amp;cs=2498856380%2C1674302750&amp;os=436238779%2C2430849089&amp;simid=3397274913%2C164867901&amp;adpicid=0&amp;lpn=0&amp;ln=1772&amp;fr=&amp;fmq=1608623852182_R&amp;fm=&amp;ic=undefined&amp;s=undefined&amp;hd=undefined&amp;latest=undefined&amp;copyright=undefined&amp;se=&amp;sme=&amp;tab=0&amp;width=undefined&amp;height=undefined&amp;face=undefined&amp;ist=&amp;jit=&amp;cg=&amp;bdtype=0&amp;oriquery=&amp;objurl=https%3A%2F%2Fgimg2.baidu.com%2Fimage_search%2Fsrc%3Dhttp%3A%2F%2Fs4.51cto.com%2Fwyfs02%2FM02%2F81%2F98%2FwKiom1dF0OOhYGrAAALMtVDkk2g010.jpg-wh_651x-s_2180253300.jpg%26refer%3Dhttp%3A%2F%2Fs4.51cto.com%26app%3D2002%26size%3Df9999%2C10000%26q%3Da80%26n%3D0%26g%3D0n%26fmt%3Djpeg%3Fsec%3D1611547442%26t%3Dfdd1773f82de053595bfe4e740c7d299&amp;fromurl=ippr_z2C%24qAzdH3FAzdH3Fooo_z%26e3Bv51jrh7_z%26e3Bv54AzdH3Ftgu564wpt5gAzdH3F8nb&amp;gsm=3&amp;rpstart=0&amp;rpnum=0&amp;islist=&amp;querylist=&amp;force=undefined

《参考文献》：
	【C#无法接受keydown事件的原因分析】
	https://www.cnblogs.com/jife/articles/3247072.html
	【c#全局鼠标事件以及鼠标事件模拟】
	https://www.cnblogs.com/lged/p/5499445.html
	【C#全局键盘监听（Hook）的使用（转载）】
	https://www.cnblogs.com/zhaoyuncai/p/7684958.html
	【C#如何监听全局的事件-例如鼠标移动事件】
	https://blog.csdn.net/wl58796351/article/details/8122003
	【C# 如何捕获键盘按钮和组合键以及KeyPress/KeyDown事件之间的区别 （附KeyChar/KeyCode值）】
	https://www.cnblogs.com/feiyuhuo/p/5060773.html
	【GET_WHEEL_DELTA_WPARAM宏在C＃】
	https://blog.csdn.net/weixin_30457881/article/details/99135594
	【在C#中使用全局鼠标、键盘Hook】
	https://www.cnblogs.com/gc2013/p/3824224.html
	【c#如何模拟组合键（如ctrl+F）】
	https://bbs.csdn.net/topics/300040869
	【C#弹出选择对话框的程序】
	https://www.cnblogs.com/liulanglang/archive/2009/11/03/1595301.html
</value>
  </data>
</root>